<h1 id='rounds'>Rounds</h1><h2 id='fetch-a-round'>Fetch a round</h2><pre class="highlight javascript tab-javascript"><code><span class="kr">import</span> <span class="p">{</span> <span class="nx">CollegeNotFound</span><span class="p">,</span> <span class="nx">RoundNotFound</span> <span class="p">}</span> <span class="nx">from</span> <span class="s1">'./src/common/errors'</span>
<span class="kr">import</span> <span class="p">{</span> <span class="nx">APIErrorHandler</span> <span class="p">}</span> <span class="nx">from</span> <span class="s1">'./src/common/utils'</span>

<span class="kr">const</span> <span class="nx">id</span> <span class="o">=</span> <span class="s1">'5c32ee4a2fa935441f8cc414'</span>
<span class="kr">const</span> <span class="nx">round</span> <span class="o">=</span> <span class="mi">1</span>

<span class="nx">request</span>
  <span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">`colleges/</span><span class="p">${</span><span class="nx">id</span><span class="p">}</span><span class="s2">/rounds/</span><span class="p">${</span><span class="nx">round</span><span class="p">}</span><span class="s2">`</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">res</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">res</span><span class="p">.</span><span class="nx">data</span><span class="p">))</span>
  <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">APIErrorHandler</span><span class="p">)</span>
  <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">err</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">err</span> <span class="k">instanceof</span> <span class="nx">CollegeNotFound</span><span class="p">)</span>
      <span class="c1">// The college could be found</span>

    <span class="k">if</span> <span class="p">(</span><span class="nx">err</span> <span class="k">instanceof</span> <span class="nx">RoundNotFound</span><span class="p">)</span>
      <span class="c1">// The round could be found</span>

    <span class="c1">// Handle any other errors</span>
  <span class="p">})</span>
</code></pre>
<blockquote>
<p>The above command returns JSON structured like this:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="s2">"_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"5c3339a21a6e742e0134dbb2"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"nbr"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
  </span><span class="s2">"dates"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="s2">"start"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2019-01-17T11:36:02.657Z"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"end"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2019-01-18T11:36:02.657Z"</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="s2">"officers"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
    </span><span class="p">{</span><span class="w">
      </span><span class="s2">"_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"5c3339a41a6e742e0134dbff"</span><span class="p">,</span><span class="w">
      </span><span class="s2">"userId"</span><span class="p">:</span><span class="w"> </span><span class="s2">"5c3339a21a6e742e0134dbbf"</span><span class="p">,</span><span class="w">
      </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"president"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="p">{</span><span class="w">
      </span><span class="s2">"_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"5c3339a41a6e742e0134dc00"</span><span class="p">,</span><span class="w">
      </span><span class="s2">"userId"</span><span class="p">:</span><span class="w"> </span><span class="s2">"5c3339a31a6e742e0134dbc3"</span><span class="p">,</span><span class="w">
      </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"assessor"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="p">{</span><span class="w">
      </span><span class="s2">"_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"5c3339a41a6e742e0134dc01"</span><span class="p">,</span><span class="w">
      </span><span class="s2">"userId"</span><span class="p">:</span><span class="w"> </span><span class="s2">"5c3339a31a6e742e0134dbc7"</span><span class="p">,</span><span class="w">
      </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"assessor"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="p">{</span><span class="w">
      </span><span class="s2">"_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"5c3339a41a6e742e0134dc02"</span><span class="p">,</span><span class="w">
      </span><span class="s2">"userId"</span><span class="p">:</span><span class="w"> </span><span class="s2">"5c3339a31a6e742e0134dbcb"</span><span class="p">,</span><span class="w">
      </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"officer"</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">],</span><span class="w">
  </span><span class="s2">"lists"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
    </span><span class="s2">"5c3339a41a6e742e0134dc0f"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"5c3339a41a6e742e0134dc10"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"5c3339a41a6e742e0134dc11"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"5c3339a41a6e742e0134dc12"</span><span class="w">
  </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>This endpoint retrieves a specific round within a specific college.</p>
<h3 id='http-route'>HTTP Route</h3>
<p><code>GET colleges/&lt;ID&gt;/rounds/&lt;ROUND&gt;</code></p>
<h3 id='url-parameters'>URL Parameters</h3>
<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>ID</td>
<td>The ID of the colleges in which the round is retrieved</td>
</tr>
<tr>
<td>ROUND</td>
<td>The number of the round</td>
</tr>
</tbody></table>
<h2 id='update-a-round'>Update a round</h2><pre class="highlight javascript tab-javascript"><code><span class="kr">import</span> <span class="p">{</span>
  <span class="nx">CollegeNotFound</span><span class="p">,</span>
  <span class="nx">RoundNotFound</span><span class="p">,</span>
  <span class="nx">ValidationError</span><span class="p">,</span>
<span class="p">}</span> <span class="nx">from</span> <span class="s1">'./src/common/errors'</span>

<span class="kr">import</span> <span class="p">{</span> <span class="nx">APIErrorHandler</span> <span class="p">}</span> <span class="nx">from</span> <span class="s1">'./src/common/utils'</span>

<span class="kr">const</span> <span class="nx">id</span> <span class="o">=</span> <span class="s1">'5c32ee4a2fa935441f8cc414'</span>
<span class="kr">const</span> <span class="nx">round</span> <span class="o">=</span> <span class="mi">1</span>

<span class="kr">const</span> <span class="nx">data</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">dates</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">start</span><span class="p">:</span> <span class="s2">"2019-05-01"</span><span class="p">,</span>
    <span class="na">end</span><span class="p">:</span> <span class="s2">"2019-05-02"</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="nx">request</span>
  <span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="s2">`colleges/</span><span class="p">${</span><span class="nx">id</span><span class="p">}</span><span class="s2">/round/</span><span class="p">${</span><span class="nx">round</span><span class="p">}</span><span class="s2">`</span><span class="p">,</span> <span class="nx">data</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">res</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">res</span><span class="p">.</span><span class="nx">data</span><span class="p">))</span>
  <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">APIErrorHandler</span><span class="p">)</span>
  <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">err</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">err</span> <span class="k">instanceof</span> <span class="nx">CollegeNotFound</span><span class="p">)</span>
      <span class="c1">// The college could be found</span>

    <span class="k">if</span> <span class="p">(</span><span class="nx">err</span> <span class="k">instanceof</span> <span class="nx">RoundNotFound</span><span class="p">)</span>
      <span class="c1">// The round could be found</span>

    <span class="k">if</span> <span class="p">(</span><span class="nx">err</span> <span class="k">instanceof</span> <span class="nx">ValidationError</span><span class="p">)</span>
      <span class="c1">// The round could not be updated</span>

    <span class="c1">// Handle any other errors</span>
  <span class="p">})</span>
</code></pre>
<blockquote>
<p>The above command returns JSON structured like this:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="s2">"_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"5c3339a21a6e742e0134dbb2"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"nbr"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
  </span><span class="s2">"dates"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="s2">"start"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2019-05-01T00:00:00.0007Z"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"end"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2019-05-02T00:00:00.0007Z"</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="s2">"officers"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
    </span><span class="p">{</span><span class="w">
      </span><span class="s2">"_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"5c3339a41a6e742e0134dbff"</span><span class="p">,</span><span class="w">
      </span><span class="s2">"userId"</span><span class="p">:</span><span class="w"> </span><span class="s2">"5c3339a21a6e742e0134dbbf"</span><span class="p">,</span><span class="w">
      </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"president"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="p">{</span><span class="w">
      </span><span class="s2">"_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"5c3339a41a6e742e0134dc00"</span><span class="p">,</span><span class="w">
      </span><span class="s2">"userId"</span><span class="p">:</span><span class="w"> </span><span class="s2">"5c3339a31a6e742e0134dbc3"</span><span class="p">,</span><span class="w">
      </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"assessor"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="p">{</span><span class="w">
      </span><span class="s2">"_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"5c3339a41a6e742e0134dc01"</span><span class="p">,</span><span class="w">
      </span><span class="s2">"userId"</span><span class="p">:</span><span class="w"> </span><span class="s2">"5c3339a31a6e742e0134dbc7"</span><span class="p">,</span><span class="w">
      </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"assessor"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="p">{</span><span class="w">
      </span><span class="s2">"_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"5c3339a41a6e742e0134dc02"</span><span class="p">,</span><span class="w">
      </span><span class="s2">"userId"</span><span class="p">:</span><span class="w"> </span><span class="s2">"5c3339a31a6e742e0134dbcb"</span><span class="p">,</span><span class="w">
      </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"officer"</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">],</span><span class="w">
  </span><span class="s2">"lists"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
    </span><span class="s2">"5c3339a41a6e742e0134dc0f"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"5c3339a41a6e742e0134dc10"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"5c3339a41a6e742e0134dc11"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"5c3339a41a6e742e0134dc12"</span><span class="w">
  </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>This endpoint updates a specific round within a specific college.</p>

<p>Be sure to check how to handle <a href="#validationerror">ValidationError</a>.</p>
<h3 id='http-route-2'>HTTP Route</h3>
<p><code>PUT colleges/&lt;ID&gt;/rounds/&lt;ROUND&gt;</code></p>
<h3 id='url-parameters-2'>URL Parameters</h3>
<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>ID</td>
<td>The ID of the colleges in which the round is updated</td>
</tr>
<tr>
<td>ROUND</td>
<td>The number of the round</td>
</tr>
</tbody></table>
<h2 id='fetch-all-officers'>Fetch all officers</h2><pre class="highlight javascript tab-javascript"><code><span class="kr">import</span> <span class="p">{</span>
  <span class="nx">CollegeNotFound</span><span class="p">,</span>
  <span class="nx">RoundNotFound</span><span class="p">,</span>
  <span class="nx">NoOfficers</span>
<span class="p">}</span> <span class="nx">from</span> <span class="s1">'./src/common/errors'</span>

<span class="kr">import</span> <span class="p">{</span> <span class="nx">APIErrorHandler</span> <span class="p">}</span> <span class="nx">from</span> <span class="s1">'./src/common/utils'</span>

<span class="kr">const</span> <span class="nx">id</span> <span class="o">=</span> <span class="s1">'5c32ee4a2fa935441f8cc414'</span>
<span class="kr">const</span> <span class="nx">round</span> <span class="o">=</span> <span class="mi">1</span>

<span class="nx">request</span>
  <span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">`colleges/</span><span class="p">${</span><span class="nx">id</span><span class="p">}</span><span class="s2">/rounds/</span><span class="p">${</span><span class="nx">round</span><span class="p">}</span><span class="s2">/officers`</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">res</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">res</span><span class="p">.</span><span class="nx">data</span><span class="p">))</span>
  <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">APIErrorHandler</span><span class="p">)</span>
  <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">err</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">err</span> <span class="k">instanceof</span> <span class="nx">CollegeNotFound</span><span class="p">)</span>
      <span class="c1">// The college could not be found</span>

    <span class="k">if</span> <span class="p">(</span><span class="nx">err</span> <span class="k">instanceof</span> <span class="nx">RoundNotFound</span><span class="p">)</span>
      <span class="c1">// The round could be found</span>

    <span class="k">if</span> <span class="p">(</span><span class="nx">err</span> <span class="k">instanceof</span> <span class="nx">NoColleges</span><span class="p">)</span>
      <span class="c1">// No officers could be found</span>

    <span class="c1">// Handle any other errors</span>
  <span class="p">})</span>
</code></pre>
<blockquote>
<p>The above command returns JSON structured like this:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">[</span><span class="w">
  </span><span class="p">{</span><span class="w">
    </span><span class="s2">"userId"</span><span class="p">:</span><span class="w"> </span><span class="s2">"5c33403699212635c71fbaa2"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"president"</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="p">{</span><span class="w">
    </span><span class="s2">"userId"</span><span class="p">:</span><span class="w"> </span><span class="s2">"5c33403799212635c71fbaa6"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"assessor"</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="p">{</span><span class="w">
    </span><span class="s2">"userId"</span><span class="p">:</span><span class="w"> </span><span class="s2">"5c33403799212635c71fbaaa"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"assessor"</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="p">{</span><span class="w">
    </span><span class="s2">"userId"</span><span class="p">:</span><span class="w"> </span><span class="s2">"5c33403799212635c71fbaae"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"officer"</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">]</span><span class="w">
</span></code></pre>
<p>This endpoint retrieves all officers within a specific round of a specific college.</p>
<h3 id='http-route-3'>HTTP Route</h3>
<p><code>GET colleges/&lt;ID&gt;/rounds/&lt;ROUND&gt;/officers</code></p>
<h3 id='url-parameters-3'>URL Parameters</h3>
<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>ID</td>
<td>The ID of the college in which the round is contained</td>
</tr>
<tr>
<td>ROUND</td>
<td>The number of the round in which the officers are retrieved</td>
</tr>
</tbody></table>
<h2 id='create-an-officer'>Create an officer</h2><pre class="highlight javascript tab-javascript"><code><span class="kr">import</span> <span class="p">{</span>
  <span class="nx">CollegeNotFound</span><span class="p">,</span>
  <span class="nx">RoundNotFound</span><span class="p">,</span>
  <span class="nx">UserNotFound</span><span class="p">,</span>
  <span class="nx">ValidationError</span><span class="p">,</span>
<span class="p">}</span> <span class="nx">from</span> <span class="s1">'./src/common/errors'</span>

<span class="kr">import</span> <span class="p">{</span> <span class="nx">APIErrorHandler</span> <span class="p">}</span> <span class="nx">from</span> <span class="s1">'./src/common/utils'</span>

<span class="kr">const</span> <span class="nx">id</span> <span class="o">=</span> <span class="s1">'5c32ee4a2fa935441f8cc414'</span>
<span class="kr">const</span> <span class="nx">round</span> <span class="o">=</span> <span class="mi">1</span>

<span class="kr">const</span> <span class="nx">data</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">userId</span><span class="p">:</span> <span class="s2">"5c32ee4a2fa935441f8cc415"</span><span class="p">,</span>   <span class="c1">// Mandatory</span>
  <span class="na">type</span><span class="p">:</span> <span class="s2">"officer"</span><span class="p">,</span>                      <span class="c1">// Mandatory</span>
  <span class="na">colleges</span><span class="p">:</span> <span class="p">[</span>                           <span class="c1">// Mandatory</span>
    <span class="s2">"5c32ee4a2fa935441f8cc411"</span><span class="p">,</span>
    <span class="s2">"5c32ee4a2fa935441f8cc412"</span>
  <span class="p">]</span>
<span class="p">}</span>

<span class="nx">request</span>
  <span class="p">.</span><span class="nx">post</span><span class="p">(</span><span class="s2">`colleges/</span><span class="p">${</span><span class="nx">id</span><span class="p">}</span><span class="s2">/rounds/</span><span class="p">${</span><span class="nx">round</span><span class="p">}</span><span class="s2">/officers`</span><span class="p">,</span> <span class="nx">data</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">res</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">res</span><span class="p">.</span><span class="nx">data</span><span class="p">))</span>
  <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">APIErrorHandler</span><span class="p">)</span>
  <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">err</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">err</span> <span class="k">instanceof</span> <span class="nx">CollegeNotFound</span><span class="p">)</span>
      <span class="c1">// The college could be found</span>

    <span class="k">if</span> <span class="p">(</span><span class="nx">err</span> <span class="k">instanceof</span> <span class="nx">RoundNotFound</span><span class="p">)</span>
      <span class="c1">// The round could be found</span>

    <span class="k">if</span> <span class="p">(</span><span class="nx">err</span> <span class="k">instanceof</span> <span class="nx">UserNotFound</span><span class="p">)</span>
      <span class="c1">// The user is not an elector in the given list of colleges</span>

    <span class="k">if</span> <span class="p">(</span><span class="nx">err</span> <span class="k">instanceof</span> <span class="nx">ValidationError</span><span class="p">)</span>
      <span class="c1">// The officer could not be created</span>

    <span class="c1">// Handle any other errors</span>
  <span class="p">})</span>
</code></pre>
<blockquote>
<p>The above command returns JSON structured like this:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="s2">"userId"</span><span class="p">:</span><span class="w"> </span><span class="s2">"5c32ee4a2fa935441f8cc415"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"officer"</span><span class="w">
</span><span class="p">},</span><span class="w">
</span></code></pre>
<p>This endpoint creates an officer within a specific round of a several college.</p>

<p>Be sure to check how to handle <a href="#validationerror">ValidationError</a>.</p>

<aside class="notice">
An officer can be assigned to several colleges as long as he is an elector in at least one of these colleges.
</aside>
<h3 id='http-route-4'>HTTP Route</h3>
<p><code>POST colleges/&lt;ID&gt;/rounds/&lt;ROUND&gt;/officers</code></p>
<h3 id='url-parameters-4'>URL Parameters</h3>
<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>ID</td>
<td>The ID of the college in which the round is contained</td>
</tr>
<tr>
<td>ROUND</td>
<td>The number of the round in which the officer is created</td>
</tr>
</tbody></table>
<h2 id='delete-an-officer'>Delete an officer</h2><pre class="highlight javascript tab-javascript"><code><span class="kr">import</span> <span class="p">{</span>
  <span class="nx">CollegeNotFound</span>
  <span class="nx">RoundNotFound</span><span class="p">,</span>
  <span class="nx">UserNotFound</span><span class="p">,</span>
<span class="p">}</span> <span class="nx">from</span> <span class="s1">'./src/common/errors'</span>

<span class="kr">import</span> <span class="p">{</span> <span class="nx">APIErrorHandler</span> <span class="p">}</span> <span class="nx">from</span> <span class="s1">'./src/common/utils'</span>

<span class="kr">const</span> <span class="nx">collegeId</span> <span class="o">=</span> <span class="s1">'5c32ee4a2fa935441f8cc425'</span>
<span class="kr">const</span> <span class="nx">id</span> <span class="o">=</span> <span class="s1">'5c32ee4a2fa935441f8cc427'</span>
<span class="kr">const</span> <span class="nx">round</span> <span class="o">=</span> <span class="mi">1</span>

<span class="nx">request</span>
  <span class="p">.</span><span class="k">delete</span><span class="p">(</span><span class="s2">`colleges/</span><span class="p">${</span><span class="nx">collegeId</span><span class="p">}</span><span class="s2">/rounds/</span><span class="p">${</span><span class="nx">round</span><span class="p">}</span><span class="s2">/officers/</span><span class="p">${</span><span class="nx">id</span><span class="p">}</span><span class="s2">`</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">res</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">res</span><span class="p">.</span><span class="nx">data</span><span class="p">))</span>
  <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">APIErrorHandler</span><span class="p">)</span>
  <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">err</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">err</span> <span class="k">instanceof</span> <span class="nx">CollegeNotFound</span><span class="p">)</span>
      <span class="c1">// The college could be found</span>

    <span class="k">if</span> <span class="p">(</span><span class="nx">err</span> <span class="k">instanceof</span> <span class="nx">RoundNotFound</span><span class="p">)</span>
      <span class="c1">// The round could be found</span>

    <span class="k">if</span> <span class="p">(</span><span class="nx">err</span> <span class="k">instanceof</span> <span class="nx">UserNotFound</span><span class="p">)</span>
      <span class="c1">// The user is not an officer in this round of this college</span>

    <span class="c1">// Handle any other errors</span>
  <span class="p">})</span>
</code></pre>
<blockquote>
<p>The above command returns JSON structured like this:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
  </span><span class="s2">"success"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>This endpoint deletes a specific officer within a specific round of a specific college.</p>
<h3 id='http-route-5'>HTTP Route</h3>
<p><code>DELETE colleges/&lt;COLLEGE_ID&gt;/rounds/&lt;ROUND&gt;/officers/&lt;ID&gt;</code></p>
<h3 id='url-parameters-5'>URL Parameters</h3>
<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>COLLEGE_ID</td>
<td>The ID of the college in which the round is contained</td>
</tr>
<tr>
<td>ROUND</td>
<td>The number of the round in which the officer is contained</td>
</tr>
<tr>
<td>ID</td>
<td>The ID of the officer to delete</td>
</tr>
</tbody></table>
